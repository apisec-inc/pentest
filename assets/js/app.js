$(document).ready(function () {
    $('#btn').click(function () {
        // var seletedText = $(this).text();
        // const map1 = new Map();
        // // make it hidden by default
        // map1.set('Now', 'ONCE');
        // map1.set('Weekly Report', 'Weekly');
        $("#Features").addClass("d-none");
        $("#testresult").addClass("d-none");
        $("#errorresult").addClass("d-none");
        var testStart = Date.now();
        var email = $('#email').val();
        var openAPISpectemp = $('#openAPISpec').val();
        var openAPISpec = openAPISpectemp.replace("getpostman", "postman");
        $("#email").next().hide();
        $("#openAPISpec").next().hide();
        if (openAPISpec == '') {
            $('.invalid-tooltip').show()
            // return false;
        }
        // if (email == '') {
        //   $('#email').validate()
        //   return false;
        // }
        if (IsEmail(email) == false) {
            $('#email').next().show();
            return false;
        }
        $(this).prop('disabled', true);
        $('#btnpro').prop('disabled', true);
        $('.free').prop('disabled', true);
        $('.pro').prop('disabled', true);
        $("#testresult").addClass("d-none");
        $("#tdata").empty();
        $("#fp").empty();
        $('.testdomain').text(openAPISpec);
        $("#loadingresult").removeClass("d-none");

        var jsonData = { 'email': email, 'openAPISpec': openAPISpec, 'sourceName': "APIsec EthicalCheck", "sourceURL": "https://www.ethicalcheck.dev/" };

        // var hutk = document.cookie.replace(/(?:(?:^|.*;\s*)hubspotutk\s*\=\s*([^;]*).*$)|^.*$/, "$1");

        var hutk = document.cookie.replace(/(?:(?:^|.*;\s*)hubspotutk\s*\=\s*([^;]*).*$)|^.*$/, "$1");
        var HSData = {
            "submittedAt": testStart,
            "fields": [
                {
                    "objectTypeId": "0-1",
                    "name": "email",
                    "value": email
                },
                {
                    "objectTypeId": "0-1",
                    "name": "api_specification_url",
                    "value": openAPISpec
                }
            ],
            "context": {
                "pageUri": window.location.href,
                "pageName": "Free API Test",
                "ipAddress": "{ip_address}"
            }
        };
        event.preventDefault();

        $.ajax({
            url: 'https://pentest.apisec.ai/api/v1/pentest',
            method: 'POST',
            dataType: 'json',
            headers: {
                "Content-Type": "application/json"
            },
            data: JSON.stringify(jsonData),
            success: function (result) {
                $('#email').val("");
                $('#openAPISpec').val('');
                $('#btn').prop('disabled', false);
                $('.free').prop('disabled', false);
                $('.pro').prop('disabled', false);
                $('#btnpro').prop('disabled', false);
                $("#loadingresult").addClass("d-none");
                $("#errorresult2").addClass("d-none");
                $("#displayerrormessage").addClass("d-none");
                $("#errorresult").addClass("d-none");
                $("#Features").removeClass("d-none");
                $("#testresult").removeClass("d-none");
                $('html, body').animate({
                    scrollTop: $("#Features").offset().top
                }, 1000);
                if (result.data.testSummary.vulnerabilitiesFound >= 1) {
                    $("#gradeC").removeClass("d-none");
                    $("#gradeA").addClass("d-none");
                } else {
                    $("#gradeA").removeClass("d-none");
                    $("#gradeC").addClass("d-none");
                }
                var testEnd = Date.now();
                var testTime = Math.round((testEnd - testStart) / 1000);
                $('#date-time').text(new Date().toUTCString());
                $('#testTime').text(testTime + 's');


                tilesView();
                if (result.errors) {
                    errorDisplay();
                }

                // $('#inforesult').text(result.messages[0].value);
                // $("#inforesult").removeClass("d-none");
                // tableDisplay();

                // $("#inforesult").addClass("d-none");
                // ga('send', { 'hitType': 'pageview', 'page': '/api-scan-results', 'title': 'Free API Scan Results' });

                // function tableDisplay() {
                //     if (result.data.testSummary.vulnerabilities.data && result.data.testSummary.vulnerabilities.data.length > 0) {
                //         $.each(result.data.testSummary.vulnerabilities.data, function (k, v) {
                //             tableresults(v);
                //         });
                //     }
                //     if (result.data.testSummary.testSuiteSummary.data && result.data.testSummary.testSuiteSummary.data.length > 0) {
                //         $.each(result.data.testSummary.testSuiteSummary.data, function (i, j) {
                //             falsepositvite(j);
                //         });
                //     }
                // }
                function tilesView() {
                    $('#totalTestsExecuted').text(result.data.testSummary.totalTestsExecuted);
                    $('#totalEndpoints').text(result.data.testSummary.totalEndpoints);
                    $('#host').text(result.data.testSummary.testEnvironment);
                    $('#testsPassed').text(result.data.testSummary.testsPassed);
                    $('#testsFailed').text(result.data.testSummary.testsFailed);
                    // var vulnerabilitiesCount = result.data.testSummary.testsPassed - result.data.testSummary.testsFailed;
                    $('#vulnerabilitiesFound').text(result.data.testSummary.vulnerabilitiesFound);
                    $('#totalPlaybooks').text(result.data.testSummary.totalPlaybooks);
                    $('#host').text(result.data.testSummary.testEnvironment);
                    $('#falsepostive').text(result.data.testSummary.testSuiteSummary.data.length);
                }
                function errorDisplay() {
                    if (result.messages[0].key === 'Missing Base URL') {
                        $("#displayerrormessage").removeClass("d-none");
                        $("#errorresult").addClass("d-none");
                        $("#testresult").addClass("d-none");
                        $('.free').prop('disabled', false);
                        $('.pro').prop('disabled', false);
                        // $("#inforesult").addClass("d-none");
                    }
                    else {
                        $("#errorresult").removeClass("d-none");
                        $("#displayerrormessage").addClass("d-none");
                        $("#testresult").addClass("d-none");
                        $('.free').prop('disabled', false);
                        $('.pro').prop('disabled', false);
                        // $("#inforesult").addClass("d-none");
                        // $('#errorTitle').text(result.messages[0].key);
                        // $('#errorBody1').html('<p>Invalid OpenAPI Specification URL/File, a valid url looks like <a href=" http://netbanking.apisec.ai:8080/v2/api-docs" target="_blank">http://netbanking.apisec.ai:8080/v2/api-docs</a><br/> Report a bug: <a href="https://github.com/apisec-inc/pentest/issues" target="_blank"> https://github.com/apisec-inc/pentest/issues</a></p>');
                        // ga('send', { 'hitType': 'pageview', 'page': '/api-scan-error', 'title': 'Free API Scan Error' });

                    }
                }
            },
            error: function (error) {
                if (error) {
                    $('#email').val("");
                    $('#openAPISpec').val('');
                    $("#Features").removeClass("d-none");
                    $('#btn').prop('disabled', false);
                    $("#testresult").addClass("d-none");
                    $("#loadingresult").addClass("d-none");
                    $("#errorresult").removeClass("d-none");
                    $("#testSearch").removeClass("d-none");
                    $('.free').prop('disabled', false);
                    $('.pro').prop('disabled', false);
                    // ga('send', { 'hitType': 'pageview', 'page': '/api-scan-error', 'title': 'Free API Scan Error' });
                }
                console.log(error);
            }

        });

    });

    $("#apiurl").addClass("d-none");
    $("#bearertoken").addClass("d-none");
    $("#emailpro2").addClass("d-none");
    $("#licensekey2").addClass("d-none");


    $('#btnpro').click(function () {
        $("#apiurl").addClass("d-none");
        $("#bearertoken").addClass("d-none");
        $("#emailpro2").addClass("d-none");
        $("#licensekey2").addClass("d-none");
        $("#invalidLicense").addClass("d-none");
        $("#displayerrormessage").addClass("d-none");
        $("#testresult").addClass("d-none");
        $("#errorresult").addClass("d-none");
        $('html, body').animate({
            scrollTop: $("#Features").offset().top
        }, 1000);
        var testStart = Date.now();
        var email = $('#emailPro').val();
        var openAPISpectemp = $('#openAPISpecPro').val();
        var licenseKey = $('#licenseKey').val();
        var headers = $('#tokenField').val();
        var openAPISpec = openAPISpectemp.replace("getpostman", "postman");
        $("#emailPro").next().hide();
        $("#openAPISpecPro").next().hide();
        $("#licenseKey").next().hide();
        $("#headers").next().hide();
        if (openAPISpecPro == '') {
            $('.invalid-tooltip').show()
        }
        validatepro();
        if (IsEmail(email) == false || openAPISpectemp == '' || licenseKey == '' || headers == '') {
            $('#emailPro').next().show();
            $('#openAPISpecPro').next().show();
            $('#licenseKey').next().show();
            $('#tokenField').next().show();
            return false;
        }
        if (openAPISpectemp !== '' && headers !== '' && email !== '' && licenseKey !== '') {
            $('.free').prop('disabled', true);
            $('.pro').prop('disabled', true);
            $('#btnpro').prop('disabled', true);
            $(this).prop('disabled', true);
            $("#testresult").addClass("d-none");
            $('.testdomain').text(openAPISpec);
            $("#loadingresult").removeClass("d-none");
            var jsonData = { 'email': email, 'openAPISpec': openAPISpec, 'licenseKey': licenseKey, 'headers': headers, 'sourceName': "APIsec EthicalCheck", "sourceURL": "https://www.ethicalcheck.dev/" };
            event.preventDefault();
            $.ajax({
                url: 'https://pentest.apisec.ai/api/v1/pentest',
                method: 'POST',
                dataType: 'json',
                headers: {
                    "Content-Type": "application/json"
                },
                data: JSON.stringify(jsonData),
                success: function (result) {
                    $('#emailPro').val("");
                    $('#openAPISpecPro').val('');
                    $('#licenseKey').val('');
                    $('#tokenField').val('');
                    $('#btn').prop('disabled', false);
                    $('#btnpro').prop('disabled', false);
                    $('.free').prop('disabled', false);
                    $('.pro').prop('disabled', false);
                    $("#invalidLicense").addClass("d-none");
                    $("#loadingresult").addClass("d-none");
                    $("#displayerrormessage").addClass("d-none");
                    $("#errorresult").addClass("d-none");
                    $("#Features").removeClass("d-none");
                    if (result.errors) {
                        errorDisplay();

                        $("#testresult").addClass("d-none");
                    }
                    else {
                        $("#testresult").removeClass("d-none");
                        $('html, body').animate({
                            scrollTop: $("#Features").offset().top
                        }, 1000);
                        var testEnd = Date.now();
                        var testTime = Math.round((testEnd - testStart) / 1000);
                        $('#date-time').text(new Date().toUTCString());
                        $('#testTime').text(testTime + 's');
                        grade();
                        function grade() {
                            if (result.data.testSummary.vulnerabilitiesFound >= 1) {
                                $("#gradeC").removeClass("d-none");
                                $("#gradeA").addClass("d-none");
                            } else {
                                $("#gradeA").removeClass("d-none");
                                $("#gradeC").addClass("d-none");
                            }
                        }
                        tilesView();
                        function tilesView() {
                            $('#totalTestsExecuted').text(result.data.testSummary.totalTestsExecuted);
                            $('#totalEndpoints').text(result.data.testSummary.totalEndpoints);
                            $('#host').text(result.data.testSummary.testEnvironment);
                            $('#testsPassed').text(result.data.testSummary.testsPassed);
                            $('#testsFailed').text(result.data.testSummary.testsFailed);
                            // var vulnerabilitiesCount = result.data.testSummary.testsPassed - result.data.testSummary.testsFailed;
                            $('#vulnerabilitiesFound').text(result.data.testSummary.vulnerabilitiesFound);
                            $('#totalPlaybooks').text(result.data.testSummary.totalPlaybooks);
                            $('#host').text(result.data.testSummary.testEnvironment);
                            $('#falsepostive').text(result.data.testSummary.testSuiteSummary.data.length);
                        }
                    }

                    function errorDisplay() {

                        // $("#errorresult").removeClass("d-none");
                        // Invalid OpenAPI Specification

                        if (result.messages[0].key === 'Invalid License Key') {
                            $('html, body').animate({
                                scrollTop: $("#Features").offset().top
                            }, 1000);
                            $("#invalidLicense").removeClass("d-none");
                            $("#errorresult").addClass("d-none");
                            $("#testresult").addClass("d-none");
                        }
                        if (result.messages[0].key === 'Missing Base URL') {
                            $('html, body').animate({
                                scrollTop: $("#Features").offset().top
                            }, 1000);
                            $("#displayerrormessage").removeClass("d-none");
                            $("#errorresult").addClass("d-none");
                            $("#testresult").addClass("d-none");
                        }


                    }

                },
                error: function (error) {
                    if (error) {
                        $('html, body').animate({
                            scrollTop: $("#Features").offset().top
                        }, 1000);
                        $('#emailPro').val("");
                        $('#openAPISpecPro').val('');
                        $('#licenseKey').val('');
                        $('#tokenField').val('');
                        $("#Features").removeClass("d-none");
                        if (error)
                            $("#errorresult").removeClass("d-none");

                        $('#btnpro').prop('disabled', false);
                        $('.free').prop('disabled', false);
                        $('.pro').prop('disabled', false);
                        // $("#invalidLicense").removeClass("d-none");
                        $("#testresult").addClass("d-none");
                        $("#loadingresult").addClass("d-none");

                    }


                }

            });
        }
        function validatepro() {
            if (openAPISpectemp == '') {
                $("#apiurl").removeClass("d-none");
            }
            if (headers == '') {
                $("#bearertoken").removeClass("d-none");
            }
            if (email == '' || IsEmail(email) == false) {
                $("#emailpro2").removeClass("d-none");
            }
            if (licenseKey == '') {
                $("#licensekey2").removeClass("d-none");
            }
        }
        function IsEmail(email) {
            var regex = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
            if (!regex.test(email)) {
                return false;
            } else {
                return true;
            }
        }
    })

});